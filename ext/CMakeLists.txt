# Copyright Linkoping University 2011
# SGCT Project Authors see Authors.txt

if (SGCT_DEP_INCLUDE_GLBINDINGS)
  set(OPTION_BUILD_GPU_TESTS OFF CACHE BOOL "")
  set(OPTION_BUILD_TESTS OFF CACHE BOOL "")
  set(OPTION_BUILD_TOOLS OFF CACHE BOOL "")
  set(OPTION_BUILD_EXAMPLES OFF CACHE BOOL "")
  mark_as_advanced(OPTION_BUILD_GPU_TESTS OPTION_BUILD_TESTS OPTION_BUILD_TOOLS
    OPTION_BUILD_EXAMPLES OPTION_BUILD_CHECK OPTION_BUILD_DOCS
    OPTION_BUILD_WITH_BOOST_THREAD INSTALL_MSVC_REDIST_FILEPATH)
  if (NOT TARGET glbinding)
    add_subdirectory(glbinding)
  
    set_property(TARGET glbinding PROPERTY FOLDER "Dependencies")
    set_property(TARGET glbinding-aux PROPERTY FOLDER "Dependencies")
    set_property(TARGET pack PROPERTY FOLDER "Dependencies")
    set_property(TARGET pack-glbinding PROPERTY FOLDER "Dependencies")
    set_property(TARGET KHRplatform-sources PROPERTY FOLDER "Dependencies")
  endif ()
endif ()


if (SGCT_DEP_INCLUDE_GLFW)
  set(GLFW_BUILD_EXAMPLES OFF CACHE BOOL "Build the GLFW example programs")
  set(GLFW_BUILD_TESTS OFF CACHE BOOL "Build the GLFW test programs")
  set(GLFW_BUILD_DOCS OFF CACHE BOOL "Build the GLFW documentation")
  set(GLFW_INSTALL OFF CACHE BOOL "Generate installation target")
  add_subdirectory(glfw)
  set_property(TARGET glfw PROPERTY FOLDER "Dependencies")
  disable_external_warnings(glfw)
endif ()

if (SGCT_DEP_INCLUDE_LIBPNG)
  add_subdirectory(lpng)
  if (TARGET zlibstatic)
    disable_external_warnings(zlibstatic)
  endif ()

  if (TARGET miniziplibstatic)
    disable_external_warnings(miniziplibstatic)
  endif ()
endif ()


if (SGCT_DEP_INCLUDE_FREETYPE AND SGCT_FREETYPE_SUPPORT)
  if (NOT TARGET freetype)
    add_subdirectory(freetype2) # needs zconf.h generated by lpng->zlib
    set_target_properties(freetype PROPERTIES FOLDER "Dependencies")
    disable_external_warnings(freetype)
  endif ()
endif ()

if (SGCT_DEP_INCLUDE_TINYXML)
  add_subdirectory(tinyxml2)
endif ()

if (SGCT_DEP_INCLUDE_VRPN)
  add_subdirectory(vrpn)
endif ()

if (NOT TARGET tracy)
  add_library(tracy "${PROJECT_SOURCE_DIR}/ext/tracy/TracyClient.cpp")
  target_include_directories(tracy PUBLIC "${PROJECT_SOURCE_DIR}/ext/tracy")
  if (SGCT_DEP_ENABLE_TRACY)
    target_compile_definitions(tracy PUBLIC TRACY_ENABLE)
  endif ()
endif ()
